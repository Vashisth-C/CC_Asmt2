State 76 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce
State 79 conflicts: 3 shift/reduce


Grammar

    0 $accept: start $end

    1 start: PROGRAM IDENTIFIER SEMICOLON variable_declaration program_declaration PERIOD

    2 variable_declaration: VAR variable_list
    3                     | ε

    4 variable_list: variable_line
    5              | variable_line variable_list

    6 variable_line: left_side_vars COLON rigth_side_type SEMICOLON

    7 left_side_vars: IDENTIFIER
    8               | IDENTIFIER COMMA left_side_vars

    9 rigth_side_type: DATATYPE
   10                | ARRAY OPEN_BRACKET CONSTANT RANGE_DOTS CONSTANT CLOSE_BRACKET OF DATATYPE

   11 program_declaration: BEGIN_TAG statements END

   12 statements: statementline
   13           | statementline statements

   14 statementline: WRITE OPEN_PARANTHESIS possible_writes CLOSE_PARANTHESIS SEMICOLON
   15              | READ OPEN_PARANTHESIS possible_reads CLOSE_PARANTHESIS SEMICOLON
   16              | IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
   17              | IF OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS THEN program_declaration ELSE program_declaration SEMICOLON
   18              | IF OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS THEN program_declaration SEMICOLON
   19              | IF conditionals THEN program_declaration ELSE program_declaration SEMICOLON
   20              | IF conditionals THEN program_declaration SEMICOLON
   21              | WHILE OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS DO program_declaration SEMICOLON
   22              | FOR IDENTIFIER ASSIGNMENT_OP expression TO expression DO program_declaration SEMICOLON
   23              | FOR IDENTIFIER ASSIGNMENT_OP expression DOWNTO expression DO program_declaration SEMICOLON
   24              | WHILE conditionals DO program_declaration SEMICOLON

   25 conditionals: expression RELATIONAL_OP expression

   26 possible_writes: possible_write_values
   27                | ε

   28 possible_write_values: left_side_vars
   29                      | STRING_CONSTANT
   30                      | STRING_CONSTANT COMMA possible_write_values

   31 possible_reads: IDENTIFIER
   32               | IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET

   33 expression: unit
   34           | OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
   35           | expression ARITHEMATIC_OP expression
   36           | expression BOOLEAN_OP expression
   37           | expression ARITHEMATIC_OP_MINUS expression

   38 unit: IDENTIFIER
   39     | CONSTANT
   40     | IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET
   41     | BOOLEAN_OP_NOT unit
   42     | ARITHEMATIC_OP_MINUS unit


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER (258) 1 7 8 16 22 23 31 32 38 40
    CONSTANT (259) 10 39
    ARITHEMATIC_OP (260) 35
    RELATIONAL_OP (261) 25
    ASSIGNMENT_OP (262) 16 22 23
    SEMICOLON (263) 1 6 14 15 16 17 18 19 20 21 22 23 24
    COMMA (264) 8 30
    BOOLEAN_OP (265) 36
    OPEN_BRACKET (266) 10 32 40
    OPEN_PARANTHESIS (267) 14 15 17 18 21 34
    CLOSE_BRACKET (268) 10 32 40
    CLOSE_PARANTHESIS (269) 14 15 17 18 21 34
    PERIOD (270) 1
    RANGE_DOTS (271) 10
    IF (272) 17 18 19 20
    WHILE (273) 21 24
    ELSE (274) 17 19
    FOR (275) 22 23
    DO (276) 21 22 23 24
    BEGIN_TAG (277) 11
    END (278) 11
    WRITE (279) 14
    READ (280) 15
    PROGRAM (281) 1
    STRING_CONSTANT (282) 29 30
    DOWNTO (283) 23
    TO (284) 22
    OF (285) 10
    COLON (286) 6
    VAR (287) 2
    DATATYPE (288) 9 10
    ARRAY (289) 10
    THEN (290) 17 18 19 20
    BOOLEAN_OP_NOT (291) 41
    ARITHEMATIC_OP_MINUS (292) 37 42


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    start (39)
        on left: 1
        on right: 0
    variable_declaration (40)
        on left: 2 3
        on right: 1
    variable_list (41)
        on left: 4 5
        on right: 2 5
    variable_line (42)
        on left: 6
        on right: 4 5
    left_side_vars (43)
        on left: 7 8
        on right: 6 8 28
    rigth_side_type (44)
        on left: 9 10
        on right: 6
    program_declaration (45)
        on left: 11
        on right: 1 17 18 19 20 21 22 23 24
    statements (46)
        on left: 12 13
        on right: 11 13
    statementline (47)
        on left: 14 15 16 17 18 19 20 21 22 23 24
        on right: 12 13
    conditionals (48)
        on left: 25
        on right: 17 18 19 20 21 24
    possible_writes (49)
        on left: 26 27
        on right: 14
    possible_write_values (50)
        on left: 28 29 30
        on right: 26 30
    possible_reads (51)
        on left: 31 32
        on right: 15
    expression (52)
        on left: 33 34 35 36 37
        on right: 16 22 23 25 32 34 35 36 37 40
    unit (53)
        on left: 38 39 40 41 42
        on right: 33 41 42


State 0

    0 $accept: • start $end
    1 start: • PROGRAM IDENTIFIER SEMICOLON variable_declaration program_declaration PERIOD

    PROGRAM  shift, and go to state 1

    start  go to state 2


State 1

    1 start: PROGRAM • IDENTIFIER SEMICOLON variable_declaration program_declaration PERIOD

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: start • $end

    $end  shift, and go to state 4


State 3

    1 start: PROGRAM IDENTIFIER • SEMICOLON variable_declaration program_declaration PERIOD

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: start $end •

    $default  accept


State 5

    1 start: PROGRAM IDENTIFIER SEMICOLON • variable_declaration program_declaration PERIOD
    2 variable_declaration: • VAR variable_list
    3                     | ε •  [BEGIN_TAG]

    VAR  shift, and go to state 6

    $default  reduce using rule 3 (variable_declaration)

    variable_declaration  go to state 7


State 6

    2 variable_declaration: VAR • variable_list
    4 variable_list: • variable_line
    5              | • variable_line variable_list
    6 variable_line: • left_side_vars COLON rigth_side_type SEMICOLON
    7 left_side_vars: • IDENTIFIER
    8               | • IDENTIFIER COMMA left_side_vars

    IDENTIFIER  shift, and go to state 8

    variable_list   go to state 9
    variable_line   go to state 10
    left_side_vars  go to state 11


State 7

    1 start: PROGRAM IDENTIFIER SEMICOLON variable_declaration • program_declaration PERIOD
   11 program_declaration: • BEGIN_TAG statements END

    BEGIN_TAG  shift, and go to state 12

    program_declaration  go to state 13


State 8

    7 left_side_vars: IDENTIFIER •  [CLOSE_PARANTHESIS, COLON]
    8               | IDENTIFIER • COMMA left_side_vars

    COMMA  shift, and go to state 14

    $default  reduce using rule 7 (left_side_vars)


State 9

    2 variable_declaration: VAR variable_list •

    $default  reduce using rule 2 (variable_declaration)


State 10

    4 variable_list: • variable_line
    4              | variable_line •  [BEGIN_TAG]
    5              | • variable_line variable_list
    5              | variable_line • variable_list
    6 variable_line: • left_side_vars COLON rigth_side_type SEMICOLON
    7 left_side_vars: • IDENTIFIER
    8               | • IDENTIFIER COMMA left_side_vars

    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 4 (variable_list)

    variable_list   go to state 15
    variable_line   go to state 10
    left_side_vars  go to state 11


State 11

    6 variable_line: left_side_vars • COLON rigth_side_type SEMICOLON

    COLON  shift, and go to state 16


State 12

   11 program_declaration: BEGIN_TAG • statements END
   12 statements: • statementline
   13           | • statementline statements
   14 statementline: • WRITE OPEN_PARANTHESIS possible_writes CLOSE_PARANTHESIS SEMICOLON
   15              | • READ OPEN_PARANTHESIS possible_reads CLOSE_PARANTHESIS SEMICOLON
   16              | • IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
   17              | • IF OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS THEN program_declaration ELSE program_declaration SEMICOLON
   18              | • IF OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS THEN program_declaration SEMICOLON
   19              | • IF conditionals THEN program_declaration ELSE program_declaration SEMICOLON
   20              | • IF conditionals THEN program_declaration SEMICOLON
   21              | • WHILE OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS DO program_declaration SEMICOLON
   22              | • FOR IDENTIFIER ASSIGNMENT_OP expression TO expression DO program_declaration SEMICOLON
   23              | • FOR IDENTIFIER ASSIGNMENT_OP expression DOWNTO expression DO program_declaration SEMICOLON
   24              | • WHILE conditionals DO program_declaration SEMICOLON

    IDENTIFIER  shift, and go to state 17
    IF          shift, and go to state 18
    WHILE       shift, and go to state 19
    FOR         shift, and go to state 20
    WRITE       shift, and go to state 21
    READ        shift, and go to state 22

    statements     go to state 23
    statementline  go to state 24


State 13

    1 start: PROGRAM IDENTIFIER SEMICOLON variable_declaration program_declaration • PERIOD

    PERIOD  shift, and go to state 25


State 14

    7 left_side_vars: • IDENTIFIER
    8               | • IDENTIFIER COMMA left_side_vars
    8               | IDENTIFIER COMMA • left_side_vars

    IDENTIFIER  shift, and go to state 8

    left_side_vars  go to state 26


State 15

    5 variable_list: variable_line variable_list •

    $default  reduce using rule 5 (variable_list)


State 16

    6 variable_line: left_side_vars COLON • rigth_side_type SEMICOLON
    9 rigth_side_type: • DATATYPE
   10                | • ARRAY OPEN_BRACKET CONSTANT RANGE_DOTS CONSTANT CLOSE_BRACKET OF DATATYPE

    DATATYPE  shift, and go to state 27
    ARRAY     shift, and go to state 28

    rigth_side_type  go to state 29


State 17

   16 statementline: IDENTIFIER • ASSIGNMENT_OP expression SEMICOLON

    ASSIGNMENT_OP  shift, and go to state 30


State 18

   17 statementline: IF • OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS THEN program_declaration ELSE program_declaration SEMICOLON
   18              | IF • OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS THEN program_declaration SEMICOLON
   19              | IF • conditionals THEN program_declaration ELSE program_declaration SEMICOLON
   20              | IF • conditionals THEN program_declaration SEMICOLON
   25 conditionals: • expression RELATIONAL_OP expression
   33 expression: • unit
   34           | • OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
   35           | • expression ARITHEMATIC_OP expression
   36           | • expression BOOLEAN_OP expression
   37           | • expression ARITHEMATIC_OP_MINUS expression
   38 unit: • IDENTIFIER
   39     | • CONSTANT
   40     | • IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET
   41     | • BOOLEAN_OP_NOT unit
   42     | • ARITHEMATIC_OP_MINUS unit

    IDENTIFIER            shift, and go to state 31
    CONSTANT              shift, and go to state 32
    OPEN_PARANTHESIS      shift, and go to state 33
    BOOLEAN_OP_NOT        shift, and go to state 34
    ARITHEMATIC_OP_MINUS  shift, and go to state 35

    conditionals  go to state 36
    expression    go to state 37
    unit          go to state 38


State 19

   21 statementline: WHILE • OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS DO program_declaration SEMICOLON
   24              | WHILE • conditionals DO program_declaration SEMICOLON
   25 conditionals: • expression RELATIONAL_OP expression
   33 expression: • unit
   34           | • OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
   35           | • expression ARITHEMATIC_OP expression
   36           | • expression BOOLEAN_OP expression
   37           | • expression ARITHEMATIC_OP_MINUS expression
   38 unit: • IDENTIFIER
   39     | • CONSTANT
   40     | • IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET
   41     | • BOOLEAN_OP_NOT unit
   42     | • ARITHEMATIC_OP_MINUS unit

    IDENTIFIER            shift, and go to state 31
    CONSTANT              shift, and go to state 32
    OPEN_PARANTHESIS      shift, and go to state 39
    BOOLEAN_OP_NOT        shift, and go to state 34
    ARITHEMATIC_OP_MINUS  shift, and go to state 35

    conditionals  go to state 40
    expression    go to state 37
    unit          go to state 38


State 20

   22 statementline: FOR • IDENTIFIER ASSIGNMENT_OP expression TO expression DO program_declaration SEMICOLON
   23              | FOR • IDENTIFIER ASSIGNMENT_OP expression DOWNTO expression DO program_declaration SEMICOLON

    IDENTIFIER  shift, and go to state 41


State 21

   14 statementline: WRITE • OPEN_PARANTHESIS possible_writes CLOSE_PARANTHESIS SEMICOLON

    OPEN_PARANTHESIS  shift, and go to state 42


State 22

   15 statementline: READ • OPEN_PARANTHESIS possible_reads CLOSE_PARANTHESIS SEMICOLON

    OPEN_PARANTHESIS  shift, and go to state 43


State 23

   11 program_declaration: BEGIN_TAG statements • END

    END  shift, and go to state 44


State 24

   12 statements: • statementline
   12           | statementline •  [END]
   13           | • statementline statements
   13           | statementline • statements
   14 statementline: • WRITE OPEN_PARANTHESIS possible_writes CLOSE_PARANTHESIS SEMICOLON
   15              | • READ OPEN_PARANTHESIS possible_reads CLOSE_PARANTHESIS SEMICOLON
   16              | • IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
   17              | • IF OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS THEN program_declaration ELSE program_declaration SEMICOLON
   18              | • IF OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS THEN program_declaration SEMICOLON
   19              | • IF conditionals THEN program_declaration ELSE program_declaration SEMICOLON
   20              | • IF conditionals THEN program_declaration SEMICOLON
   21              | • WHILE OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS DO program_declaration SEMICOLON
   22              | • FOR IDENTIFIER ASSIGNMENT_OP expression TO expression DO program_declaration SEMICOLON
   23              | • FOR IDENTIFIER ASSIGNMENT_OP expression DOWNTO expression DO program_declaration SEMICOLON
   24              | • WHILE conditionals DO program_declaration SEMICOLON

    IDENTIFIER  shift, and go to state 17
    IF          shift, and go to state 18
    WHILE       shift, and go to state 19
    FOR         shift, and go to state 20
    WRITE       shift, and go to state 21
    READ        shift, and go to state 22

    $default  reduce using rule 12 (statements)

    statements     go to state 45
    statementline  go to state 24


State 25

    1 start: PROGRAM IDENTIFIER SEMICOLON variable_declaration program_declaration PERIOD •

    $default  reduce using rule 1 (start)


State 26

    8 left_side_vars: IDENTIFIER COMMA left_side_vars •

    $default  reduce using rule 8 (left_side_vars)


State 27

    9 rigth_side_type: DATATYPE •

    $default  reduce using rule 9 (rigth_side_type)


State 28

   10 rigth_side_type: ARRAY • OPEN_BRACKET CONSTANT RANGE_DOTS CONSTANT CLOSE_BRACKET OF DATATYPE

    OPEN_BRACKET  shift, and go to state 46


State 29

    6 variable_line: left_side_vars COLON rigth_side_type • SEMICOLON

    SEMICOLON  shift, and go to state 47


State 30

   16 statementline: IDENTIFIER ASSIGNMENT_OP • expression SEMICOLON
   33 expression: • unit
   34           | • OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
   35           | • expression ARITHEMATIC_OP expression
   36           | • expression BOOLEAN_OP expression
   37           | • expression ARITHEMATIC_OP_MINUS expression
   38 unit: • IDENTIFIER
   39     | • CONSTANT
   40     | • IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET
   41     | • BOOLEAN_OP_NOT unit
   42     | • ARITHEMATIC_OP_MINUS unit

    IDENTIFIER            shift, and go to state 31
    CONSTANT              shift, and go to state 32
    OPEN_PARANTHESIS      shift, and go to state 48
    BOOLEAN_OP_NOT        shift, and go to state 34
    ARITHEMATIC_OP_MINUS  shift, and go to state 35

    expression  go to state 49
    unit        go to state 38


State 31

   38 unit: IDENTIFIER •  [ARITHEMATIC_OP, RELATIONAL_OP, SEMICOLON, BOOLEAN_OP, CLOSE_BRACKET, CLOSE_PARANTHESIS, DO, DOWNTO, TO, THEN, ARITHEMATIC_OP_MINUS]
   40     | IDENTIFIER • OPEN_BRACKET expression CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 50

    $default  reduce using rule 38 (unit)


State 32

   39 unit: CONSTANT •

    $default  reduce using rule 39 (unit)


State 33

   17 statementline: IF OPEN_PARANTHESIS • conditionals CLOSE_PARANTHESIS THEN program_declaration ELSE program_declaration SEMICOLON
   18              | IF OPEN_PARANTHESIS • conditionals CLOSE_PARANTHESIS THEN program_declaration SEMICOLON
   25 conditionals: • expression RELATIONAL_OP expression
   33 expression: • unit
   34           | • OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
   34           | OPEN_PARANTHESIS • expression CLOSE_PARANTHESIS
   35           | • expression ARITHEMATIC_OP expression
   36           | • expression BOOLEAN_OP expression
   37           | • expression ARITHEMATIC_OP_MINUS expression
   38 unit: • IDENTIFIER
   39     | • CONSTANT
   40     | • IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET
   41     | • BOOLEAN_OP_NOT unit
   42     | • ARITHEMATIC_OP_MINUS unit

    IDENTIFIER            shift, and go to state 31
    CONSTANT              shift, and go to state 32
    OPEN_PARANTHESIS      shift, and go to state 48
    BOOLEAN_OP_NOT        shift, and go to state 34
    ARITHEMATIC_OP_MINUS  shift, and go to state 35

    conditionals  go to state 51
    expression    go to state 52
    unit          go to state 38


State 34

   38 unit: • IDENTIFIER
   39     | • CONSTANT
   40     | • IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET
   41     | • BOOLEAN_OP_NOT unit
   41     | BOOLEAN_OP_NOT • unit
   42     | • ARITHEMATIC_OP_MINUS unit

    IDENTIFIER            shift, and go to state 31
    CONSTANT              shift, and go to state 32
    BOOLEAN_OP_NOT        shift, and go to state 34
    ARITHEMATIC_OP_MINUS  shift, and go to state 35

    unit  go to state 53


State 35

   38 unit: • IDENTIFIER
   39     | • CONSTANT
   40     | • IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET
   41     | • BOOLEAN_OP_NOT unit
   42     | • ARITHEMATIC_OP_MINUS unit
   42     | ARITHEMATIC_OP_MINUS • unit

    IDENTIFIER            shift, and go to state 31
    CONSTANT              shift, and go to state 32
    BOOLEAN_OP_NOT        shift, and go to state 34
    ARITHEMATIC_OP_MINUS  shift, and go to state 35

    unit  go to state 54


State 36

   19 statementline: IF conditionals • THEN program_declaration ELSE program_declaration SEMICOLON
   20              | IF conditionals • THEN program_declaration SEMICOLON

    THEN  shift, and go to state 55


State 37

   25 conditionals: expression • RELATIONAL_OP expression
   35 expression: expression • ARITHEMATIC_OP expression
   36           | expression • BOOLEAN_OP expression
   37           | expression • ARITHEMATIC_OP_MINUS expression

    ARITHEMATIC_OP        shift, and go to state 56
    RELATIONAL_OP         shift, and go to state 57
    BOOLEAN_OP            shift, and go to state 58
    ARITHEMATIC_OP_MINUS  shift, and go to state 59


State 38

   33 expression: unit •

    $default  reduce using rule 33 (expression)


State 39

   21 statementline: WHILE OPEN_PARANTHESIS • conditionals CLOSE_PARANTHESIS DO program_declaration SEMICOLON
   25 conditionals: • expression RELATIONAL_OP expression
   33 expression: • unit
   34           | • OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
   34           | OPEN_PARANTHESIS • expression CLOSE_PARANTHESIS
   35           | • expression ARITHEMATIC_OP expression
   36           | • expression BOOLEAN_OP expression
   37           | • expression ARITHEMATIC_OP_MINUS expression
   38 unit: • IDENTIFIER
   39     | • CONSTANT
   40     | • IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET
   41     | • BOOLEAN_OP_NOT unit
   42     | • ARITHEMATIC_OP_MINUS unit

    IDENTIFIER            shift, and go to state 31
    CONSTANT              shift, and go to state 32
    OPEN_PARANTHESIS      shift, and go to state 48
    BOOLEAN_OP_NOT        shift, and go to state 34
    ARITHEMATIC_OP_MINUS  shift, and go to state 35

    conditionals  go to state 60
    expression    go to state 52
    unit          go to state 38


State 40

   24 statementline: WHILE conditionals • DO program_declaration SEMICOLON

    DO  shift, and go to state 61


State 41

   22 statementline: FOR IDENTIFIER • ASSIGNMENT_OP expression TO expression DO program_declaration SEMICOLON
   23              | FOR IDENTIFIER • ASSIGNMENT_OP expression DOWNTO expression DO program_declaration SEMICOLON

    ASSIGNMENT_OP  shift, and go to state 62


State 42

    7 left_side_vars: • IDENTIFIER
    8               | • IDENTIFIER COMMA left_side_vars
   14 statementline: WRITE OPEN_PARANTHESIS • possible_writes CLOSE_PARANTHESIS SEMICOLON
   26 possible_writes: • possible_write_values
   27                | ε •  [CLOSE_PARANTHESIS]
   28 possible_write_values: • left_side_vars
   29                      | • STRING_CONSTANT
   30                      | • STRING_CONSTANT COMMA possible_write_values

    IDENTIFIER       shift, and go to state 8
    STRING_CONSTANT  shift, and go to state 63

    $default  reduce using rule 27 (possible_writes)

    left_side_vars         go to state 64
    possible_writes        go to state 65
    possible_write_values  go to state 66


State 43

   15 statementline: READ OPEN_PARANTHESIS • possible_reads CLOSE_PARANTHESIS SEMICOLON
   31 possible_reads: • IDENTIFIER
   32               | • IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET

    IDENTIFIER  shift, and go to state 67

    possible_reads  go to state 68


State 44

   11 program_declaration: BEGIN_TAG statements END •

    $default  reduce using rule 11 (program_declaration)


State 45

   13 statements: statementline statements •

    $default  reduce using rule 13 (statements)


State 46

   10 rigth_side_type: ARRAY OPEN_BRACKET • CONSTANT RANGE_DOTS CONSTANT CLOSE_BRACKET OF DATATYPE

    CONSTANT  shift, and go to state 69


State 47

    6 variable_line: left_side_vars COLON rigth_side_type SEMICOLON •

    $default  reduce using rule 6 (variable_line)


State 48

   33 expression: • unit
   34           | • OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
   34           | OPEN_PARANTHESIS • expression CLOSE_PARANTHESIS
   35           | • expression ARITHEMATIC_OP expression
   36           | • expression BOOLEAN_OP expression
   37           | • expression ARITHEMATIC_OP_MINUS expression
   38 unit: • IDENTIFIER
   39     | • CONSTANT
   40     | • IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET
   41     | • BOOLEAN_OP_NOT unit
   42     | • ARITHEMATIC_OP_MINUS unit

    IDENTIFIER            shift, and go to state 31
    CONSTANT              shift, and go to state 32
    OPEN_PARANTHESIS      shift, and go to state 48
    BOOLEAN_OP_NOT        shift, and go to state 34
    ARITHEMATIC_OP_MINUS  shift, and go to state 35

    expression  go to state 70
    unit        go to state 38


State 49

   16 statementline: IDENTIFIER ASSIGNMENT_OP expression • SEMICOLON
   35 expression: expression • ARITHEMATIC_OP expression
   36           | expression • BOOLEAN_OP expression
   37           | expression • ARITHEMATIC_OP_MINUS expression

    ARITHEMATIC_OP        shift, and go to state 56
    SEMICOLON             shift, and go to state 71
    BOOLEAN_OP            shift, and go to state 58
    ARITHEMATIC_OP_MINUS  shift, and go to state 59


State 50

   33 expression: • unit
   34           | • OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
   35           | • expression ARITHEMATIC_OP expression
   36           | • expression BOOLEAN_OP expression
   37           | • expression ARITHEMATIC_OP_MINUS expression
   38 unit: • IDENTIFIER
   39     | • CONSTANT
   40     | • IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET
   40     | IDENTIFIER OPEN_BRACKET • expression CLOSE_BRACKET
   41     | • BOOLEAN_OP_NOT unit
   42     | • ARITHEMATIC_OP_MINUS unit

    IDENTIFIER            shift, and go to state 31
    CONSTANT              shift, and go to state 32
    OPEN_PARANTHESIS      shift, and go to state 48
    BOOLEAN_OP_NOT        shift, and go to state 34
    ARITHEMATIC_OP_MINUS  shift, and go to state 35

    expression  go to state 72
    unit        go to state 38


State 51

   17 statementline: IF OPEN_PARANTHESIS conditionals • CLOSE_PARANTHESIS THEN program_declaration ELSE program_declaration SEMICOLON
   18              | IF OPEN_PARANTHESIS conditionals • CLOSE_PARANTHESIS THEN program_declaration SEMICOLON

    CLOSE_PARANTHESIS  shift, and go to state 73


State 52

   25 conditionals: expression • RELATIONAL_OP expression
   34 expression: OPEN_PARANTHESIS expression • CLOSE_PARANTHESIS
   35           | expression • ARITHEMATIC_OP expression
   36           | expression • BOOLEAN_OP expression
   37           | expression • ARITHEMATIC_OP_MINUS expression

    ARITHEMATIC_OP        shift, and go to state 56
    RELATIONAL_OP         shift, and go to state 57
    BOOLEAN_OP            shift, and go to state 58
    CLOSE_PARANTHESIS     shift, and go to state 74
    ARITHEMATIC_OP_MINUS  shift, and go to state 59


State 53

   41 unit: BOOLEAN_OP_NOT unit •

    $default  reduce using rule 41 (unit)


State 54

   42 unit: ARITHEMATIC_OP_MINUS unit •

    $default  reduce using rule 42 (unit)


State 55

   11 program_declaration: • BEGIN_TAG statements END
   19 statementline: IF conditionals THEN • program_declaration ELSE program_declaration SEMICOLON
   20              | IF conditionals THEN • program_declaration SEMICOLON

    BEGIN_TAG  shift, and go to state 12

    program_declaration  go to state 75


State 56

   33 expression: • unit
   34           | • OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
   35           | • expression ARITHEMATIC_OP expression
   35           | expression ARITHEMATIC_OP • expression
   36           | • expression BOOLEAN_OP expression
   37           | • expression ARITHEMATIC_OP_MINUS expression
   38 unit: • IDENTIFIER
   39     | • CONSTANT
   40     | • IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET
   41     | • BOOLEAN_OP_NOT unit
   42     | • ARITHEMATIC_OP_MINUS unit

    IDENTIFIER            shift, and go to state 31
    CONSTANT              shift, and go to state 32
    OPEN_PARANTHESIS      shift, and go to state 48
    BOOLEAN_OP_NOT        shift, and go to state 34
    ARITHEMATIC_OP_MINUS  shift, and go to state 35

    expression  go to state 76
    unit        go to state 38


State 57

   25 conditionals: expression RELATIONAL_OP • expression
   33 expression: • unit
   34           | • OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
   35           | • expression ARITHEMATIC_OP expression
   36           | • expression BOOLEAN_OP expression
   37           | • expression ARITHEMATIC_OP_MINUS expression
   38 unit: • IDENTIFIER
   39     | • CONSTANT
   40     | • IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET
   41     | • BOOLEAN_OP_NOT unit
   42     | • ARITHEMATIC_OP_MINUS unit

    IDENTIFIER            shift, and go to state 31
    CONSTANT              shift, and go to state 32
    OPEN_PARANTHESIS      shift, and go to state 48
    BOOLEAN_OP_NOT        shift, and go to state 34
    ARITHEMATIC_OP_MINUS  shift, and go to state 35

    expression  go to state 77
    unit        go to state 38


State 58

   33 expression: • unit
   34           | • OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
   35           | • expression ARITHEMATIC_OP expression
   36           | • expression BOOLEAN_OP expression
   36           | expression BOOLEAN_OP • expression
   37           | • expression ARITHEMATIC_OP_MINUS expression
   38 unit: • IDENTIFIER
   39     | • CONSTANT
   40     | • IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET
   41     | • BOOLEAN_OP_NOT unit
   42     | • ARITHEMATIC_OP_MINUS unit

    IDENTIFIER            shift, and go to state 31
    CONSTANT              shift, and go to state 32
    OPEN_PARANTHESIS      shift, and go to state 48
    BOOLEAN_OP_NOT        shift, and go to state 34
    ARITHEMATIC_OP_MINUS  shift, and go to state 35

    expression  go to state 78
    unit        go to state 38


State 59

   33 expression: • unit
   34           | • OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
   35           | • expression ARITHEMATIC_OP expression
   36           | • expression BOOLEAN_OP expression
   37           | • expression ARITHEMATIC_OP_MINUS expression
   37           | expression ARITHEMATIC_OP_MINUS • expression
   38 unit: • IDENTIFIER
   39     | • CONSTANT
   40     | • IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET
   41     | • BOOLEAN_OP_NOT unit
   42     | • ARITHEMATIC_OP_MINUS unit

    IDENTIFIER            shift, and go to state 31
    CONSTANT              shift, and go to state 32
    OPEN_PARANTHESIS      shift, and go to state 48
    BOOLEAN_OP_NOT        shift, and go to state 34
    ARITHEMATIC_OP_MINUS  shift, and go to state 35

    expression  go to state 79
    unit        go to state 38


State 60

   21 statementline: WHILE OPEN_PARANTHESIS conditionals • CLOSE_PARANTHESIS DO program_declaration SEMICOLON

    CLOSE_PARANTHESIS  shift, and go to state 80


State 61

   11 program_declaration: • BEGIN_TAG statements END
   24 statementline: WHILE conditionals DO • program_declaration SEMICOLON

    BEGIN_TAG  shift, and go to state 12

    program_declaration  go to state 81


State 62

   22 statementline: FOR IDENTIFIER ASSIGNMENT_OP • expression TO expression DO program_declaration SEMICOLON
   23              | FOR IDENTIFIER ASSIGNMENT_OP • expression DOWNTO expression DO program_declaration SEMICOLON
   33 expression: • unit
   34           | • OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
   35           | • expression ARITHEMATIC_OP expression
   36           | • expression BOOLEAN_OP expression
   37           | • expression ARITHEMATIC_OP_MINUS expression
   38 unit: • IDENTIFIER
   39     | • CONSTANT
   40     | • IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET
   41     | • BOOLEAN_OP_NOT unit
   42     | • ARITHEMATIC_OP_MINUS unit

    IDENTIFIER            shift, and go to state 31
    CONSTANT              shift, and go to state 32
    OPEN_PARANTHESIS      shift, and go to state 48
    BOOLEAN_OP_NOT        shift, and go to state 34
    ARITHEMATIC_OP_MINUS  shift, and go to state 35

    expression  go to state 82
    unit        go to state 38


State 63

   29 possible_write_values: STRING_CONSTANT •  [CLOSE_PARANTHESIS]
   30                      | STRING_CONSTANT • COMMA possible_write_values

    COMMA  shift, and go to state 83

    $default  reduce using rule 29 (possible_write_values)


State 64

   28 possible_write_values: left_side_vars •

    $default  reduce using rule 28 (possible_write_values)


State 65

   14 statementline: WRITE OPEN_PARANTHESIS possible_writes • CLOSE_PARANTHESIS SEMICOLON

    CLOSE_PARANTHESIS  shift, and go to state 84


State 66

   26 possible_writes: possible_write_values •

    $default  reduce using rule 26 (possible_writes)


State 67

   31 possible_reads: IDENTIFIER •  [CLOSE_PARANTHESIS]
   32               | IDENTIFIER • OPEN_BRACKET expression CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 85

    $default  reduce using rule 31 (possible_reads)


State 68

   15 statementline: READ OPEN_PARANTHESIS possible_reads • CLOSE_PARANTHESIS SEMICOLON

    CLOSE_PARANTHESIS  shift, and go to state 86


State 69

   10 rigth_side_type: ARRAY OPEN_BRACKET CONSTANT • RANGE_DOTS CONSTANT CLOSE_BRACKET OF DATATYPE

    RANGE_DOTS  shift, and go to state 87


State 70

   34 expression: OPEN_PARANTHESIS expression • CLOSE_PARANTHESIS
   35           | expression • ARITHEMATIC_OP expression
   36           | expression • BOOLEAN_OP expression
   37           | expression • ARITHEMATIC_OP_MINUS expression

    ARITHEMATIC_OP        shift, and go to state 56
    BOOLEAN_OP            shift, and go to state 58
    CLOSE_PARANTHESIS     shift, and go to state 74
    ARITHEMATIC_OP_MINUS  shift, and go to state 59


State 71

   16 statementline: IDENTIFIER ASSIGNMENT_OP expression SEMICOLON •

    $default  reduce using rule 16 (statementline)


State 72

   35 expression: expression • ARITHEMATIC_OP expression
   36           | expression • BOOLEAN_OP expression
   37           | expression • ARITHEMATIC_OP_MINUS expression
   40 unit: IDENTIFIER OPEN_BRACKET expression • CLOSE_BRACKET

    ARITHEMATIC_OP        shift, and go to state 56
    BOOLEAN_OP            shift, and go to state 58
    CLOSE_BRACKET         shift, and go to state 88
    ARITHEMATIC_OP_MINUS  shift, and go to state 59


State 73

   17 statementline: IF OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS • THEN program_declaration ELSE program_declaration SEMICOLON
   18              | IF OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS • THEN program_declaration SEMICOLON

    THEN  shift, and go to state 89


State 74

   34 expression: OPEN_PARANTHESIS expression CLOSE_PARANTHESIS •

    $default  reduce using rule 34 (expression)


State 75

   19 statementline: IF conditionals THEN program_declaration • ELSE program_declaration SEMICOLON
   20              | IF conditionals THEN program_declaration • SEMICOLON

    SEMICOLON  shift, and go to state 90
    ELSE       shift, and go to state 91


State 76

   35 expression: expression • ARITHEMATIC_OP expression
   35           | expression ARITHEMATIC_OP expression •  [ARITHEMATIC_OP, RELATIONAL_OP, SEMICOLON, CLOSE_BRACKET, CLOSE_PARANTHESIS, DO, DOWNTO, TO, THEN, ARITHEMATIC_OP_MINUS]
   36           | expression • BOOLEAN_OP expression
   37           | expression • ARITHEMATIC_OP_MINUS expression

    BOOLEAN_OP            shift, and go to state 58
    ARITHEMATIC_OP_MINUS  shift, and go to state 59

    ARITHEMATIC_OP_MINUS  [reduce using rule 35 (expression)]
    $default              reduce using rule 35 (expression)

    Conflict between rule 35 and token ARITHEMATIC_OP resolved as reduce (%left ARITHEMATIC_OP).
    Conflict between rule 35 and token BOOLEAN_OP resolved as shift (ARITHEMATIC_OP < BOOLEAN_OP).

    shift/reduce conflict on token ARITHEMATIC_OP_MINUS:
       35 expression: expression ARITHEMATIC_OP expression •
       37 expression: expression • ARITHEMATIC_OP_MINUS expression
      Example: expression ARITHEMATIC_OP expression • ARITHEMATIC_OP_MINUS expression
      Shift derivation
        expression
        ↳ 35: expression ARITHEMATIC_OP expression
                                        ↳ 37: expression • ARITHEMATIC_OP_MINUS expression
      Reduce derivation
        expression
        ↳ 37: expression                                   ARITHEMATIC_OP_MINUS expression
              ↳ 35: expression ARITHEMATIC_OP expression •



State 77

   25 conditionals: expression RELATIONAL_OP expression •  [CLOSE_PARANTHESIS, DO, THEN]
   35 expression: expression • ARITHEMATIC_OP expression
   36           | expression • BOOLEAN_OP expression
   37           | expression • ARITHEMATIC_OP_MINUS expression

    ARITHEMATIC_OP        shift, and go to state 56
    BOOLEAN_OP            shift, and go to state 58
    ARITHEMATIC_OP_MINUS  shift, and go to state 59

    $default  reduce using rule 25 (conditionals)


State 78

   35 expression: expression • ARITHEMATIC_OP expression
   36           | expression • BOOLEAN_OP expression
   36           | expression BOOLEAN_OP expression •  [ARITHEMATIC_OP, RELATIONAL_OP, SEMICOLON, BOOLEAN_OP, CLOSE_BRACKET, CLOSE_PARANTHESIS, DO, DOWNTO, TO, THEN, ARITHEMATIC_OP_MINUS]
   37           | expression • ARITHEMATIC_OP_MINUS expression

    ARITHEMATIC_OP_MINUS  shift, and go to state 59

    ARITHEMATIC_OP_MINUS  [reduce using rule 36 (expression)]
    $default              reduce using rule 36 (expression)

    Conflict between rule 36 and token ARITHEMATIC_OP resolved as reduce (ARITHEMATIC_OP < BOOLEAN_OP).
    Conflict between rule 36 and token BOOLEAN_OP resolved as reduce (%left BOOLEAN_OP).

    shift/reduce conflict on token ARITHEMATIC_OP_MINUS:
       36 expression: expression BOOLEAN_OP expression •
       37 expression: expression • ARITHEMATIC_OP_MINUS expression
      Example: expression BOOLEAN_OP expression • ARITHEMATIC_OP_MINUS expression
      Shift derivation
        expression
        ↳ 36: expression BOOLEAN_OP expression
                                    ↳ 37: expression • ARITHEMATIC_OP_MINUS expression
      Reduce derivation
        expression
        ↳ 37: expression                               ARITHEMATIC_OP_MINUS expression
              ↳ 36: expression BOOLEAN_OP expression •



State 79

   35 expression: expression • ARITHEMATIC_OP expression
   36           | expression • BOOLEAN_OP expression
   37           | expression • ARITHEMATIC_OP_MINUS expression
   37           | expression ARITHEMATIC_OP_MINUS expression •  [ARITHEMATIC_OP, RELATIONAL_OP, SEMICOLON, BOOLEAN_OP, CLOSE_BRACKET, CLOSE_PARANTHESIS, DO, DOWNTO, TO, THEN, ARITHEMATIC_OP_MINUS]

    ARITHEMATIC_OP        shift, and go to state 56
    BOOLEAN_OP            shift, and go to state 58
    ARITHEMATIC_OP_MINUS  shift, and go to state 59

    ARITHEMATIC_OP        [reduce using rule 37 (expression)]
    BOOLEAN_OP            [reduce using rule 37 (expression)]
    ARITHEMATIC_OP_MINUS  [reduce using rule 37 (expression)]
    $default              reduce using rule 37 (expression)

    shift/reduce conflict on token ARITHEMATIC_OP:
       37 expression: expression ARITHEMATIC_OP_MINUS expression •
       35 expression: expression • ARITHEMATIC_OP expression
      Example: expression ARITHEMATIC_OP_MINUS expression • ARITHEMATIC_OP expression
      Shift derivation
        expression
        ↳ 37: expression ARITHEMATIC_OP_MINUS expression
                                              ↳ 35: expression • ARITHEMATIC_OP expression
      Reduce derivation
        expression
        ↳ 35: expression                                         ARITHEMATIC_OP expression
              ↳ 37: expression ARITHEMATIC_OP_MINUS expression •

    shift/reduce conflict on token BOOLEAN_OP:
       37 expression: expression ARITHEMATIC_OP_MINUS expression •
       36 expression: expression • BOOLEAN_OP expression
      Example: expression ARITHEMATIC_OP_MINUS expression • BOOLEAN_OP expression
      Shift derivation
        expression
        ↳ 37: expression ARITHEMATIC_OP_MINUS expression
                                              ↳ 36: expression • BOOLEAN_OP expression
      Reduce derivation
        expression
        ↳ 36: expression                                         BOOLEAN_OP expression
              ↳ 37: expression ARITHEMATIC_OP_MINUS expression •

    shift/reduce conflict on token ARITHEMATIC_OP_MINUS:
       37 expression: expression ARITHEMATIC_OP_MINUS expression •
       37 expression: expression • ARITHEMATIC_OP_MINUS expression
      Example: expression ARITHEMATIC_OP_MINUS expression • ARITHEMATIC_OP_MINUS expression
      Shift derivation
        expression
        ↳ 37: expression ARITHEMATIC_OP_MINUS expression
                                              ↳ 37: expression • ARITHEMATIC_OP_MINUS expression
      Reduce derivation
        expression
        ↳ 37: expression                                         ARITHEMATIC_OP_MINUS expression
              ↳ 37: expression ARITHEMATIC_OP_MINUS expression •



State 80

   21 statementline: WHILE OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS • DO program_declaration SEMICOLON

    DO  shift, and go to state 92


State 81

   24 statementline: WHILE conditionals DO program_declaration • SEMICOLON

    SEMICOLON  shift, and go to state 93


State 82

   22 statementline: FOR IDENTIFIER ASSIGNMENT_OP expression • TO expression DO program_declaration SEMICOLON
   23              | FOR IDENTIFIER ASSIGNMENT_OP expression • DOWNTO expression DO program_declaration SEMICOLON
   35 expression: expression • ARITHEMATIC_OP expression
   36           | expression • BOOLEAN_OP expression
   37           | expression • ARITHEMATIC_OP_MINUS expression

    ARITHEMATIC_OP        shift, and go to state 56
    BOOLEAN_OP            shift, and go to state 58
    DOWNTO                shift, and go to state 94
    TO                    shift, and go to state 95
    ARITHEMATIC_OP_MINUS  shift, and go to state 59


State 83

    7 left_side_vars: • IDENTIFIER
    8               | • IDENTIFIER COMMA left_side_vars
   28 possible_write_values: • left_side_vars
   29                      | • STRING_CONSTANT
   30                      | • STRING_CONSTANT COMMA possible_write_values
   30                      | STRING_CONSTANT COMMA • possible_write_values

    IDENTIFIER       shift, and go to state 8
    STRING_CONSTANT  shift, and go to state 63

    left_side_vars         go to state 64
    possible_write_values  go to state 96


State 84

   14 statementline: WRITE OPEN_PARANTHESIS possible_writes CLOSE_PARANTHESIS • SEMICOLON

    SEMICOLON  shift, and go to state 97


State 85

   32 possible_reads: IDENTIFIER OPEN_BRACKET • expression CLOSE_BRACKET
   33 expression: • unit
   34           | • OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
   35           | • expression ARITHEMATIC_OP expression
   36           | • expression BOOLEAN_OP expression
   37           | • expression ARITHEMATIC_OP_MINUS expression
   38 unit: • IDENTIFIER
   39     | • CONSTANT
   40     | • IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET
   41     | • BOOLEAN_OP_NOT unit
   42     | • ARITHEMATIC_OP_MINUS unit

    IDENTIFIER            shift, and go to state 31
    CONSTANT              shift, and go to state 32
    OPEN_PARANTHESIS      shift, and go to state 48
    BOOLEAN_OP_NOT        shift, and go to state 34
    ARITHEMATIC_OP_MINUS  shift, and go to state 35

    expression  go to state 98
    unit        go to state 38


State 86

   15 statementline: READ OPEN_PARANTHESIS possible_reads CLOSE_PARANTHESIS • SEMICOLON

    SEMICOLON  shift, and go to state 99


State 87

   10 rigth_side_type: ARRAY OPEN_BRACKET CONSTANT RANGE_DOTS • CONSTANT CLOSE_BRACKET OF DATATYPE

    CONSTANT  shift, and go to state 100


State 88

   40 unit: IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET •

    $default  reduce using rule 40 (unit)


State 89

   11 program_declaration: • BEGIN_TAG statements END
   17 statementline: IF OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS THEN • program_declaration ELSE program_declaration SEMICOLON
   18              | IF OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS THEN • program_declaration SEMICOLON

    BEGIN_TAG  shift, and go to state 12

    program_declaration  go to state 101


State 90

   20 statementline: IF conditionals THEN program_declaration SEMICOLON •

    $default  reduce using rule 20 (statementline)


State 91

   11 program_declaration: • BEGIN_TAG statements END
   19 statementline: IF conditionals THEN program_declaration ELSE • program_declaration SEMICOLON

    BEGIN_TAG  shift, and go to state 12

    program_declaration  go to state 102


State 92

   11 program_declaration: • BEGIN_TAG statements END
   21 statementline: WHILE OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS DO • program_declaration SEMICOLON

    BEGIN_TAG  shift, and go to state 12

    program_declaration  go to state 103


State 93

   24 statementline: WHILE conditionals DO program_declaration SEMICOLON •

    $default  reduce using rule 24 (statementline)


State 94

   23 statementline: FOR IDENTIFIER ASSIGNMENT_OP expression DOWNTO • expression DO program_declaration SEMICOLON
   33 expression: • unit
   34           | • OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
   35           | • expression ARITHEMATIC_OP expression
   36           | • expression BOOLEAN_OP expression
   37           | • expression ARITHEMATIC_OP_MINUS expression
   38 unit: • IDENTIFIER
   39     | • CONSTANT
   40     | • IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET
   41     | • BOOLEAN_OP_NOT unit
   42     | • ARITHEMATIC_OP_MINUS unit

    IDENTIFIER            shift, and go to state 31
    CONSTANT              shift, and go to state 32
    OPEN_PARANTHESIS      shift, and go to state 48
    BOOLEAN_OP_NOT        shift, and go to state 34
    ARITHEMATIC_OP_MINUS  shift, and go to state 35

    expression  go to state 104
    unit        go to state 38


State 95

   22 statementline: FOR IDENTIFIER ASSIGNMENT_OP expression TO • expression DO program_declaration SEMICOLON
   33 expression: • unit
   34           | • OPEN_PARANTHESIS expression CLOSE_PARANTHESIS
   35           | • expression ARITHEMATIC_OP expression
   36           | • expression BOOLEAN_OP expression
   37           | • expression ARITHEMATIC_OP_MINUS expression
   38 unit: • IDENTIFIER
   39     | • CONSTANT
   40     | • IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET
   41     | • BOOLEAN_OP_NOT unit
   42     | • ARITHEMATIC_OP_MINUS unit

    IDENTIFIER            shift, and go to state 31
    CONSTANT              shift, and go to state 32
    OPEN_PARANTHESIS      shift, and go to state 48
    BOOLEAN_OP_NOT        shift, and go to state 34
    ARITHEMATIC_OP_MINUS  shift, and go to state 35

    expression  go to state 105
    unit        go to state 38


State 96

   30 possible_write_values: STRING_CONSTANT COMMA possible_write_values •

    $default  reduce using rule 30 (possible_write_values)


State 97

   14 statementline: WRITE OPEN_PARANTHESIS possible_writes CLOSE_PARANTHESIS SEMICOLON •

    $default  reduce using rule 14 (statementline)


State 98

   32 possible_reads: IDENTIFIER OPEN_BRACKET expression • CLOSE_BRACKET
   35 expression: expression • ARITHEMATIC_OP expression
   36           | expression • BOOLEAN_OP expression
   37           | expression • ARITHEMATIC_OP_MINUS expression

    ARITHEMATIC_OP        shift, and go to state 56
    BOOLEAN_OP            shift, and go to state 58
    CLOSE_BRACKET         shift, and go to state 106
    ARITHEMATIC_OP_MINUS  shift, and go to state 59


State 99

   15 statementline: READ OPEN_PARANTHESIS possible_reads CLOSE_PARANTHESIS SEMICOLON •

    $default  reduce using rule 15 (statementline)


State 100

   10 rigth_side_type: ARRAY OPEN_BRACKET CONSTANT RANGE_DOTS CONSTANT • CLOSE_BRACKET OF DATATYPE

    CLOSE_BRACKET  shift, and go to state 107


State 101

   17 statementline: IF OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS THEN program_declaration • ELSE program_declaration SEMICOLON
   18              | IF OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS THEN program_declaration • SEMICOLON

    SEMICOLON  shift, and go to state 108
    ELSE       shift, and go to state 109


State 102

   19 statementline: IF conditionals THEN program_declaration ELSE program_declaration • SEMICOLON

    SEMICOLON  shift, and go to state 110


State 103

   21 statementline: WHILE OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS DO program_declaration • SEMICOLON

    SEMICOLON  shift, and go to state 111


State 104

   23 statementline: FOR IDENTIFIER ASSIGNMENT_OP expression DOWNTO expression • DO program_declaration SEMICOLON
   35 expression: expression • ARITHEMATIC_OP expression
   36           | expression • BOOLEAN_OP expression
   37           | expression • ARITHEMATIC_OP_MINUS expression

    ARITHEMATIC_OP        shift, and go to state 56
    BOOLEAN_OP            shift, and go to state 58
    DO                    shift, and go to state 112
    ARITHEMATIC_OP_MINUS  shift, and go to state 59


State 105

   22 statementline: FOR IDENTIFIER ASSIGNMENT_OP expression TO expression • DO program_declaration SEMICOLON
   35 expression: expression • ARITHEMATIC_OP expression
   36           | expression • BOOLEAN_OP expression
   37           | expression • ARITHEMATIC_OP_MINUS expression

    ARITHEMATIC_OP        shift, and go to state 56
    BOOLEAN_OP            shift, and go to state 58
    DO                    shift, and go to state 113
    ARITHEMATIC_OP_MINUS  shift, and go to state 59


State 106

   32 possible_reads: IDENTIFIER OPEN_BRACKET expression CLOSE_BRACKET •

    $default  reduce using rule 32 (possible_reads)


State 107

   10 rigth_side_type: ARRAY OPEN_BRACKET CONSTANT RANGE_DOTS CONSTANT CLOSE_BRACKET • OF DATATYPE

    OF  shift, and go to state 114


State 108

   18 statementline: IF OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS THEN program_declaration SEMICOLON •

    $default  reduce using rule 18 (statementline)


State 109

   11 program_declaration: • BEGIN_TAG statements END
   17 statementline: IF OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS THEN program_declaration ELSE • program_declaration SEMICOLON

    BEGIN_TAG  shift, and go to state 12

    program_declaration  go to state 115


State 110

   19 statementline: IF conditionals THEN program_declaration ELSE program_declaration SEMICOLON •

    $default  reduce using rule 19 (statementline)


State 111

   21 statementline: WHILE OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS DO program_declaration SEMICOLON •

    $default  reduce using rule 21 (statementline)


State 112

   11 program_declaration: • BEGIN_TAG statements END
   23 statementline: FOR IDENTIFIER ASSIGNMENT_OP expression DOWNTO expression DO • program_declaration SEMICOLON

    BEGIN_TAG  shift, and go to state 12

    program_declaration  go to state 116


State 113

   11 program_declaration: • BEGIN_TAG statements END
   22 statementline: FOR IDENTIFIER ASSIGNMENT_OP expression TO expression DO • program_declaration SEMICOLON

    BEGIN_TAG  shift, and go to state 12

    program_declaration  go to state 117


State 114

   10 rigth_side_type: ARRAY OPEN_BRACKET CONSTANT RANGE_DOTS CONSTANT CLOSE_BRACKET OF • DATATYPE

    DATATYPE  shift, and go to state 118


State 115

   17 statementline: IF OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS THEN program_declaration ELSE program_declaration • SEMICOLON

    SEMICOLON  shift, and go to state 119


State 116

   23 statementline: FOR IDENTIFIER ASSIGNMENT_OP expression DOWNTO expression DO program_declaration • SEMICOLON

    SEMICOLON  shift, and go to state 120


State 117

   22 statementline: FOR IDENTIFIER ASSIGNMENT_OP expression TO expression DO program_declaration • SEMICOLON

    SEMICOLON  shift, and go to state 121


State 118

   10 rigth_side_type: ARRAY OPEN_BRACKET CONSTANT RANGE_DOTS CONSTANT CLOSE_BRACKET OF DATATYPE •

    $default  reduce using rule 10 (rigth_side_type)


State 119

   17 statementline: IF OPEN_PARANTHESIS conditionals CLOSE_PARANTHESIS THEN program_declaration ELSE program_declaration SEMICOLON •

    $default  reduce using rule 17 (statementline)


State 120

   23 statementline: FOR IDENTIFIER ASSIGNMENT_OP expression DOWNTO expression DO program_declaration SEMICOLON •

    $default  reduce using rule 23 (statementline)


State 121

   22 statementline: FOR IDENTIFIER ASSIGNMENT_OP expression TO expression DO program_declaration SEMICOLON •

    $default  reduce using rule 22 (statementline)
